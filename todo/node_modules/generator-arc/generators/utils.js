'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFilePaths = exports.resourceUrl = exports.branchUrl = exports.defaultTemplatePath = exports.templatePath = exports.repositoryUrl = exports.branchList = exports.defaultBranch = exports.templateListPath = undefined;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _glob = require('glob');

var _glob2 = _interopRequireDefault(_glob);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var templateListPath = exports.templateListPath = _path2.default.join(__dirname, '../templates');
var defaultBranch = exports.defaultBranch = 'redux';
var branchList = exports.branchList = _fs2.default.readdirSync(templateListPath);
var repositoryUrl = exports.repositoryUrl = 'https://github.com/diegohaz/arc';

var templatePath = exports.templatePath = function templatePath(branch) {
  for (var _len = arguments.length, paths = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    paths[_key - 1] = arguments[_key];
  }

  return _path2.default.join.apply(_path2.default, [templateListPath, branch].concat(paths));
};

var defaultTemplatePath = exports.defaultTemplatePath = function defaultTemplatePath() {
  for (var _len2 = arguments.length, paths = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    paths[_key2] = arguments[_key2];
  }

  return templatePath.apply(undefined, [defaultBranch].concat(paths));
};

var branchUrl = exports.branchUrl = function branchUrl() {
  var branch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultBranch;
  return repositoryUrl + '/tree/' + branch;
};

var resourceUrl = exports.resourceUrl = function resourceUrl(resourcePath) {
  var branch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultBranch;
  return branchUrl(branch) + '/' + resourcePath.replace(/^\/|\/?$/g, '');
};

var getFilePaths = exports.getFilePaths = function getFilePaths(cwd) {
  return _glob2.default.sync('**/*.{js,jsx,ts}', { cwd: cwd });
};